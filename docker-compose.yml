# Docker compose for postgres and pgadmin

version: "3.5"
services:
  api:
    container_name: ft_api
    build:
      context: api
      args:
        NODE_ENV: ${NODE_ENV:-production}
        API_PORT: ${API_PORT:-3000}
    networks:
      - default
      - ft_transcendance
    expose:
      - ${API_PORT:-3000}
    env_file:
      - "api.env"
      - "db.env"
      - ".env"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ft_db
    volumes:
      # Mount code to avoid rebuild container to refresh code
      - ./api/src:/app/src
      - ./api/tsconfig.json:/app/tsconfig.json
      - ./api/tsconfig.build.json:/app/tsconfig.build.json
      - ./api/config.json:/app/config.json
    healthcheck:
      disable: false
    restart: unless-stopped
    depends_on:
      - "db"
  db:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - "db.env"
      - ".env"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ft_db
    expose:
      - "5432"
  client:
    container_name: ft_client
    build:
      context: client
      args:
        NODE_ENV: ${NODE_ENV:-production}
    networks:
      - default
      - ft_transcendance
    expose:
      - ${CLIENT_PORT:-4000}
    env_file:
      - ".env"
    environment:
      TZ: Europe/Paris
    volumes:
      # Mount code to avoid rebuild container to refresh code
      - ./client/components:/app/components
      - ./client/config:/app/config
      - ./client/entrypoint.sh:/app/entrypoint.sh
      - ./client/jsconfig.json:/app/jsconfig.json
      - ./client/logs:/app/logs
      - ./client/nuxt.config.js:/app/nuxt.config.js
      - ./client/package.json:/app/package.json
      - ./client/pages:/app/pages
      - ./client/static:/app/static
      - ./client/store:/app/store
      - ./client/stylelint.config.js:/app/stylelint.config.js
      - ./client/tailwind.config.js:/app/tailwind.config.js
      - ./client/tsconfig.json:/app/tsconfig.json
      - ./client/layouts:/app/layouts
      - ./client/assets:/app/assets
    healthcheck:
      disable: false
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=smaccary@student.42.fr
      - PGADMIN_DEFAULT_PASSWORD=sonic
    #     - PGADMIN_CONFIG_SERVER_MODE='False'
    volumes:
      - ./pgadmin:/var/lib/pgadmin:rw
    expose:
      - "80"
  ft_proxy:
    image: nginx
    volumes:
      - ./proxy/templates:/etc/nginx/templates
      - ./proxy/ssl:/etc/letsencrypt
    ports:
      - "8080:80"
      - "4443:443"
    networks:
      - default
      - ft_transcendance
    environment:
      - NGINX_PROD_HOST=transcendance.nollium.com
      - NGINX_DEV_HOST=localhost
      - NGINX_HTTP_PORT=80
      - NGINX_HTTPS_PORT=443
      - API_HOST=api
      - API_PORT=${API_PORT:-3000}
      - CLIENT_HOST=client
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - PGADMIN_HOST=pgadmin
      - PGADMIN_PORT=80
      - SSL_CERTIFICATE=/etc/letsencrypt/live/transcendance.nollium.com/fullchain.pem
      - SSL_CERTIFICATE_KEY=/etc/letsencrypt/live/transcendance.nollium.com/privkey.pem
      - SSL_NGINX_OPTIONS=/etc/letsencrypt/options-ssl-nginx.conf
      - SSL_NGINX_DHPARAM=/etc/letsencrypt/ssl-dhparams.pem
    restart: always
    depends_on:
      - "api"
      - "client"
      - "pgadmin"
networks:
  ft_transcendance:
    external: false

# Docker compose for postgres and pgadmin

version: "3.5"
services:
    client:
        image: ft_transcendance_client:latest
        build:
            context: client
            args:
                NODE_ENV: ${NODE_ENV:-production}
        expose:
            - 4000
        env_file:
            - ".env"
        environment:
            - TZ=Europe/Paris
            - API_BASE_URL=${API_BASE_URL-http://localhost/api}
            - BASE_URL=${BASE_URL-http://localhost/}
            - BROWSER_BASE_URL=${BROWSER_BASE_URL-http://localhost/}
            - WSS_BASE_URL=${WSS_BASE_URL-ws://localhost/}
        volumes:
            # Mount code to avoid rebuild container to refresh code
            - ${DUMMY_MOUNT:-./client:/app/} # DUMMY_MOUNT allows to disable the volume
            # Ignore node_modules/
            - /app/node_modules
        restart: unless-stopped

    api:
        build:
            context: api
            args:
                NODE_ENV: ${NODE_ENV:-production}
        expose:
            - 3000
        env_file:
            - "api.env"
            - "db.env"
            - ".env"
        volumes:
            # Mount code to avoid rebuild container to refresh code
            - ./api/src:/app/src
            - ./api/tsconfig.json:/app/tsconfig.json
            - ./api/tsconfig.build.json:/app/tsconfig.build.json
            - ./api/config.json:/app/config.json
        restart: unless-stopped
        depends_on: [db]

    db:
        image: postgres:14.1-alpine
        restart: always
        env_file:
            - "db.env"
            - ".env"
        expose:
          - 5432

    pgadmin:
        image: dpage/pgadmin4
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-smaccary@student.42.fr}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-sonic}
        volumes:
            - ${PGADMIN_VOLUME_PATH:-./pgadmin}:/var/lib/pgadmin:rw
        expose:
            - 80
        depends_on: [db]

    proxy:
        image: nginx
        volumes:
            - ./proxy/templates:/etc/nginx/templates
            - ./proxy/ssl:/etc/letsencrypt
        ports:
            - "${DOCKER_PROXY_HTTP_PORT-80}:80"
            - "${DOCKER_PROXY_HTTPS_PORT-443}:443"
        environment:
            - NGINX_PROD_HOST=transcendance.nollium.com
            - NGINX_DEV_HOST=${NGINX_DEV_HOST:-localhost}
            - NGINX_HTTP_PORT=80
            - NGINX_HTTPS_PORT=443
            - API_HOST=api
            - API_PORT=3000
            - CLIENT_HOST=client
            - CLIENT_PORT=4000
            - PGADMIN_HOST=pgadmin
            - PGADMIN_PORT=80
            - SSL_CERTIFICATE=/etc/letsencrypt/live/transcendance.nollium.com/fullchain.pem
            - SSL_CERTIFICATE_KEY=/etc/letsencrypt/live/transcendance.nollium.com/privkey.pem
            - SSL_NGINX_OPTIONS=/etc/letsencrypt/options-ssl-nginx.conf
            - SSL_NGINX_DHPARAM=/etc/letsencrypt/ssl-dhparams.pem
        restart: always
        depends_on: [client] # NGINX wont boot if client can't be resolved

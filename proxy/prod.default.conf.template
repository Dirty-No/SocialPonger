server {
	listen ${NGINX_HTTP_PORT};
	listen [::]:${NGINX_HTTP_PORT};

	server_name ${NGINX_PROD_HOST};

	location / {
		return 301 https://$server_name:${NGINX_HTTPS_PORT}$request_uri;
	}
}

server {
	listen ${NGINX_HTTPS_PORT} ssl;
	listen [::]:${NGINX_HTTPS_PORT} ssl;

	server_name ${NGINX_PROD_HOST};
	
	client_max_body_size 800M;

	location / {
		proxy_pass http://${CLIENT_HOST}:${CLIENT_PORT}/;
	}

	location /socket.io/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
		set $target  ${API_HOST}:${API_PORT};
        proxy_pass http://$target/socket.io/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}

	location /api/ {
		proxy_pass http://${API_HOST}:${API_PORT}/;
	}

	location /pgadmin/ {
		proxy_set_header X-Script-Name /pgadmin;
		proxy_set_header Host $host;

		proxy_pass http://${PGADMIN_HOST}:${PGADMIN_PORT}/;

		proxy_redirect off;
	}

	ssl_certificate ${SSL_CERTIFICATE};
	ssl_certificate_key ${SSL_CERTIFICATE_KEY};
	include ${SSL_NGINX_OPTIONS};
	ssl_dhparam ${SSL_NGINX_DHPARAM};
}

server {
	listen ${NGINX_HTTP_PORT};
	listen [::]:${NGINX_HTTP_PORT};

	server_name ${NGINX_DEV_HOST};

	location / {
		return 301 https://$server_name:${NGINX_HTTPS_PORT}$request_uri;
	}
}

server {
	listen ${NGINX_HTTPS_PORT} ssl;
	listen [::]:${NGINX_HTTPS_PORT} ssl;

	server_name ${NGINX_DEV_HOST};

	location / {
		proxy_pass http://${CLIENT_HOST}:${CLIENT_PORT}/;
	}

	location /socket.io/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
		set $target  ${API_HOST}:${API_PORT};
        proxy_pass http://$target/socket.io/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}

	location /api/ {
		proxy_pass http://${API_HOST}:${API_PORT}/;
	}

	location /pgadmin/ {
		proxy_set_header X-Script-Name /pgadmin;
		proxy_set_header Host $host;

		proxy_pass http://${PGADMIN_HOST}:${PGADMIN_PORT}/;

		proxy_redirect off;
	}

	ssl_certificate ${SSL_CERTIFICATE};
	ssl_certificate_key ${SSL_CERTIFICATE_KEY};
	include ${SSL_NGINX_OPTIONS};
	ssl_dhparam ${SSL_NGINX_DHPARAM};
}
